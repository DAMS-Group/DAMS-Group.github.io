<div class="news-container">
  <!-- 左侧导航栏 -->
  <div class="news-sidebar">
    <h3>导航栏</h3>

    <!-- 分类导航 -->
    {% assign newslist = site.news %}
    <div class="category-nav">
      <ul class="category-list">
        <li class="category-section" id="category-全部">
          <a
            href="#"
            class="category-link active"
            data-category="全部"
            >全部</a
          >
          <div class="news-list">
            {% if newslist != blank %}
              {% assign news = newslist | reverse %}
              {% for item in news %}
                <div class="news-item">
                  <div class="news-date">{{ item.date | date: '%Y-%m-%d' }}</div>
                  <a href="#news-{{ forloop.index }}" class="news-link">{{ item.title | slice: 6, 100 }}</a>
                </div>
              {% endfor %}
            {% else %}
              <p>暂无新闻...</p>
            {% endif %}
          </div>
        </li>
        <li class="category-section" id="category-学术活动">
          <a
            href="#"
            class="category-link"
            data-category="学术活动"
            >学术活动</a
          >
          <div class="news-list" style="display: none;">
            {% if newslist != blank %}
              {% assign news = newslist | reverse %}
              {% for item in news %}
                {% if item.category == '学术活动' %}
                  <div class="news-item">
                    <div class="news-date">{{ item.date | date: '%Y-%m-%d' }}</div>
                    <a href="#news-{{ forloop.index }}" class="news-link">{{ item.title | slice: 6, 100 }}</a>
                  </div>
                {% endif %}
              {% endfor %}
            {% else %}
              <p>暂无新闻...</p>
            {% endif %}
          </div>
        </li>
        <li class="category-section" id="category-团建活动">
          <a
            href="#"
            class="category-link"
            data-category="团建活动"
            >团建活动</a
          >
          <div class="news-list" style="display: none;">
            {% if newslist != blank %}
              {% assign news = newslist | reverse %}
              {% for item in news %}
                {% if item.category == '团建活动' %}
                  <div class="news-item">
                    <div class="news-date">{{ item.date | date: '%Y-%m-%d' }}</div>
                    <a href="#news-{{ forloop.index }}" class="news-link">{{ item.title | slice: 6, 100 }}</a>
                  </div>
                {% endif %}
              {% endfor %}
            {% else %}
              <p>暂无新闻...</p>
            {% endif %}
          </div>
        </li>
      </ul>
    </div>
  </div>

  <!-- 右侧详细内容区 -->
  <div class="news-section">
    {% if newslist != blank %}
      {% assign news = newslist | reverse %}
      {% assign has_news = false %}
      <!-- 添加分页变量 -->
      {% assign total_news = news.size %}
      {% assign news_per_page = 10 %}
      {% assign total_pages = total_news | divided_by: news_per_page | plus: 1 %}
      {% for item in news %}
        {% assign category = item.category | default: '其他' %}
        <div
          id="news-{{ forloop.index }}"
          class="news-card"
          data-category="{{ category }}"
          {% if forloop.index > 10 %}style="display: none;"{% endif %}
        >
          <div class="news-date">{{ item.date | date: '%Y-%m-%d' }}</div>
          <h4>
            {% if item.inline %}
              {{ item.title }}
            {% else %}
              <a href="{{ item.url | relative_url }}">{{ item.title }}</a>
            {% endif %}
          </h4>
          <div class="news-content">
            {% if item.inline %}
              {{ item.content | remove: '<p>' | remove: '</p>' | emojify }}
            {% else %}
              {% assign first_paragraph = item.content | split: '</p>' | first | remove: '<p>' %}
              {{ first_paragraph }}
              {% unless item.title contains "【论文录用】" %}
                <a href="{{ item.url | relative_url }}" class="read-more">阅读更多</a>
              {% endunless %}
            {% endif %}
          </div>
        </div>
        {% if category == '学术活动' or category == '团建活动' or category == '其他' %}
          {% assign has_news = true %}
        {% endif %}
      {% endfor %}
      {% if has_news == false %}
        <p class="no-news-message">暂无新闻...</p>
      {% endif %}
    {% else %}
      <p>暂无新闻...</p>
    {% endif %}
  </div>
</div>

<!-- 分页控件 -->
<div class="pagination-wrapper">
  <nav aria-label="Blog page navigation" class="pagination-container">
    <ul class="pagination pagination-lg justify-content-center">
      <li class="page-item">
        <a id="prev-page" class="page-link"> &lt; </a>
      </li>
      <li class="page-item">
        <span class="page-link">第 <span id="current-page">1</span> / <span id="total-pages">1</span> 页</span>
      </li>
      <li class="page-item">
        <a id="next-page" class="page-link"> &gt; </a>
      </li>
    </ul>
  </nav>
</div>

<!-- JavaScript代码 -->
<script>
  document.addEventListener('DOMContentLoaded', function () {
    // 分页相关变量
    let currentPage = 1;
    const newsPerPage = 10;
    let filteredCards = [];
    let hasInitialNews = false;
    
    // 获取所有分类链接和分类内容区
    const categoryLinks = document.querySelectorAll('.category-link');
    const categorySections = document.querySelectorAll('.category-section');
    const newsCards = document.querySelectorAll('.news-card');
    
    // 初始化筛选的新闻卡片
    filteredCards = Array.from(newsCards);

    // 分页控件元素
    const prevPageBtn = document.getElementById('prev-page');
    const nextPageBtn = document.getElementById('next-page');
    const currentPageEl = document.getElementById('current-page');
    const totalPagesEl = document.getElementById('total-pages');

    // 分页函数
    function updatePagination() {
      // 计算总页数
      const totalPages = Math.ceil(filteredCards.length / newsPerPage);
      totalPagesEl.textContent = totalPages;
      currentPageEl.textContent = currentPage;

      // 更新按钮状态
      prevPageBtn.disabled = currentPage <= 1;
      nextPageBtn.disabled = currentPage >= totalPages;

      // 隐藏所有新闻卡片
      filteredCards.forEach(card => {
        card.style.display = 'none';
      });

      // 显示当前页的新闻
      const startIndex = (currentPage - 1) * newsPerPage;
      const endIndex = Math.min(startIndex + newsPerPage, filteredCards.length);

      for (let i = startIndex; i < endIndex; i++) {
        if (filteredCards[i]) {
          filteredCards[i].style.display = 'block';
        }
      }
    }

    // 分页按钮事件
    prevPageBtn.addEventListener('click', function() {
      if (currentPage > 1) {
        currentPage--;
        updatePagination();
      }
    });

    nextPageBtn.addEventListener('click', function() {
      const totalPages = Math.ceil(filteredCards.length / newsPerPage);
      if (currentPage < totalPages) {
        currentPage++;
        updatePagination();
      }
    });

    // 初始化 - 显示全部分类
    document.getElementById('category-全部').classList.add('active');

    hasInitialNews = filteredCards.length > 0;

    // 初始化分页
    updatePagination();

    // 添加导航栏动画激活
    const categoryNav = document.querySelector('.category-nav');
    if (categoryNav) {
      categoryNav.classList.add('active');
    }

    // 初始化 - 隐藏非活动分类的news-list
    categorySections.forEach((section) => {
      if (section.id !== 'category-全部') {
        const newsList = section.querySelector('.news-list');
        if (newsList) {
          newsList.style.display = 'none';
          // 隐藏非活动分类的news-item
          const newsItems = newsList.querySelectorAll('.news-item');
          newsItems.forEach((item) => {
            item.classList.remove('active');
          });
        }
      } else {
        // 为默认分类的news-item添加active类
        const newsItems = section.querySelectorAll('.news-item');
        newsItems.forEach((item) => {
          item.classList.add('active');
        });
      }
    });

    // 检查初始分类是否有新闻
    const noNewsMessage = document.querySelector('.no-news-message');
    if (noNewsMessage) {
      noNewsMessage.style.display = hasInitialNews ? 'none' : 'block';
    }

    // 为分类链接添加点击事件
    categoryLinks.forEach((link) => {
      link.addEventListener('click', function (e) {
        e.preventDefault();

        // 移除所有链接的active类
        categoryLinks.forEach((l) => l.classList.remove('active'));

        // 为当前点击的链接添加active类
        this.classList.add('active');

        // 获取选中的分类
        const selectedCategory = this.getAttribute('data-category');

        // 处理分类内容区的显示/隐藏
        categorySections.forEach((section) => {
          section.classList.remove('active');
          const newsList = section.querySelector('.news-list');
          if (newsList) {
            newsList.style.display = 'none';
          }
        });

        // 显示选中的分类内容区
        const selectedSection = document.getElementById('category-' + selectedCategory);
        selectedSection.classList.add('active');
        const selectedNewsList = selectedSection.querySelector('.news-list');
        if (selectedNewsList) {
          selectedNewsList.style.display = 'block';
          // 为选中分类的news-item添加active类
          const newsItems = selectedNewsList.querySelectorAll('.news-item');
          newsItems.forEach((item) => {
            item.classList.add('active');
          });
        }

        // 筛选新闻卡片
        let hasNews = false;
        // 重置当前页为第一页
        currentPage = 1;

        // 隐藏当前所有的 新闻卡片
        filteredCards.forEach(card => {
          card.style.display = 'none';
        });

        // 筛选符合条件的新闻卡片
        filteredCards = Array.from(newsCards).filter(card => {
          return selectedCategory === '全部' || card.getAttribute('data-category') === selectedCategory;
        });

        if (filteredCards.length > 0) {
          hasNews = true;
        }

        // 更新分页
        updatePagination();

        // 检查是否有该分类的新闻
        const noNewsMessage = document.querySelector('.no-news-message');
        if (noNewsMessage) {
          noNewsMessage.style.display = hasNews ? 'none' : 'block';
        }
      });
    });

    // 为新闻链接添加点击事件，点击时滚动到对应的新闻卡片
    const newsLinks = document.querySelectorAll('.news-link');
    newsLinks.forEach((link) => {
      link.addEventListener('click', function (e) {
        e.preventDefault();

        // 移除所有news-item的active类
        const allNewsItems = document.querySelectorAll('.news-item');
        allNewsItems.forEach((item) => {
          item.classList.remove('active');
        });

        // 为当前点击的news-item添加active类
        const currentNewsItem = this.closest('.news-item');
        if (currentNewsItem) {
          currentNewsItem.classList.add('active');
        }

        // 获取目标新闻卡片
        const targetId = this.getAttribute('href');
        const targetElement = document.querySelector(targetId);
        if (targetElement) {
          // 确保目标新闻卡片在当前筛选条件下可见
          const targetCategory = targetElement.getAttribute('data-category');
          const currentActiveCategory = document.querySelector('.category-link.active').getAttribute('data-category');

          // 如果当前分类不是"全部"且与目标新闻卡片的分类不同，则切换到"全部"分类
          if (currentActiveCategory !== '全部' && currentActiveCategory !== targetCategory) {
            const allCategoryLink = document.querySelector('.category-link[data-category="全部"]');
            if (allCategoryLink) {
              // 模拟点击"全部"分类链接
              allCategoryLink.classList.add('active');
              categoryLinks.forEach((l) => {
                if (l !== allCategoryLink) {
                  l.classList.remove('active');
                }
              });
              
              // 更新分类内容区显示
              categorySections.forEach((section) => {
                section.classList.remove('active');
                const newsList = section.querySelector('.news-list');
                if (newsList) {
                  newsList.style.display = 'none';
                }
              });
              
              const allSection = document.getElementById('category-全部');
              allSection.classList.add('active');
              const allNewsList = allSection.querySelector('.news-list');
              if (allNewsList) {
                allNewsList.style.display = 'block';
              }
              
              // 调用分页函数更新显示
              updatePagination();
            }
          }

          // 计算目标新闻卡片在筛选后列表中的索引
          const targetIndex = filteredCards.indexOf(targetElement);
          if (targetIndex !== -1) {
            // 计算目标新闻卡片所在的页码
            const targetPage = Math.floor(targetIndex / newsPerPage) + 1;
            // 如果目标页码与当前页码不同，则更新当前页码并重新分页
            if (targetPage !== currentPage) {
              currentPage = targetPage;
              updatePagination();
            }
          }
          
          // 滚动到目标元素
          targetElement.scrollIntoView({ behavior: 'smooth' });
        }
      });
    });

    // 初始化时确保分页控件正确显示
    updatePagination();
  });
</script>
